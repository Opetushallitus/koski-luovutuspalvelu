sudo: required
dist: trusty
language: node_js
node_js:
  - "8"
services:
 - docker


cache:
  directories:
    - proxy/node_modules
    - $HOME/.cache/pip
    - $HOME/docker-cache

env:
  global:
    - AWS_DEFAULT_REGION=eu-west-1
    # Travis_IAM_User_API_key
    # AWS_ACCESS_KEY_ID=...
    - secure: "lggU0ApTWlnRiWXrzq6/Co4KUmgtUVgs9ceMyZJsQ6a3JFVAtlcp1vW0sHClXv4caD0mD19DJTUNNgH3+2nJV9NIhdGXdnjvywHVtzB0g2TkZQOeRTTJ5n9xMyJNMVCe5f/DMKOJDe5LrvTTIoDVBRcX2F7AaP3n9SnsDOGjyVm77Q89cFdO9NeYnpD755AFwoNd6wQwc9fq+W6HwE+rb1DzrYz4HXZUVLQRcDdAiQWPLRNmwhUvuTEIZvFNd64LqpaTCRyrDVdBono1TwOUQNdaZUKbal5P6gbEqHGDNeBpIZfYQUFM7T62YbTlUkkVD7W9645u3RGiRD1+DpnCbIKP+W279Jn8GHhUiBj+MqUbfgoevCErXKloBnkjRPXKCIAJl2knMsQF03FPfGqyXeA0OKdNufZ0KhzzbhRs9f9+nntTnlKqoMF2slgs/6ny9cy4choKcD9Eg2IoRsmsBtQ4iwSgT955tHdvE8JVA95U+QWrPoT1u2Ns9c7S9roSoP14hF4jeDjVGKXWErhDmMDp5ezloJMvQVtmo9W5jm+Y+IoowGFofYQ+AFRkUDxTNFYqFcwTTr6OzdKAEEUyUweCVqtxPbe1CwOZM13rkCsPE7E8xiNWTZ451K5Z33pqSXzKl077P0O2Kd5UKgJbxq2RvDi1HvSiSiXmutnBFls="
    # AWS_SECRET_ACCESS_KEY=...
    - secure: "VVDo7xABHj/ED7OYyFAyjhzIcbxNlrug5Ha6NGtP1yS4X5q1tTqu5FLY/SMCxYur+ay6svK5zNcR515rtPKKC0VS4tobTuoqA8KqiMQWQjaEc46WrQNs2U11FC/uLJxX3yVHTN2NLAxA3GRTHBt5sg2FAUJIVUs4NSXqVKg7/uFcj8EwIJyyN+IQb/tKFY3+S2SxjSa5TIYtOgnkIk6W+H2DNUW/NkOHyzDgaFtCEZ9O/wG6h5vSwuYjf9patZrkeEnFIz5ipL3RaFUhhnHvUL62u6RO3TCS+eb+9ZfKBHRw6G7/FjoDxZqvSojfnzOLt30PKJdgl0ZoaDjNd3d2GuO6OafNVdT+Rqa0gaj8rEjsZz4nAAt55QXBe1+rrlBb2JGFcKeQj5ag7BQ3JC98mN6dBDONqncmD42zwleO1u/MmQRQlgLQNaFtUyB2HJBZWxke6ygMJFyb9XANj6bYxcyYICeevUmCIeBgbC2Hei3c4TfnoapQsAHm0hecXyiq3UiJx9/VelbkTj3LfJk30OgFrikp8k7MLbRXkabIhSI0+/aBxkj9xjo2OYI8Qc5WNUxiT3Kx/tum/D0roNXWTuu8cP/AqGbAXsf6p+PE2h7SrArq4mwGoZ7o0wKrmXmo72EJTpRE1d5vFdwtFhnPkD7suT0ZNBqFUyn3gMauzt4="

before_install:
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  # Load cached docker images
  - if [[ -d $HOME/docker-cache ]]; then ls $HOME/docker-cache/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  
install:
  - cd $TRAVIS_BUILD_DIR/proxy
  - npm install

script:
  - cd $TRAVIS_BUILD_DIR/proxy
  - npm run build
  - cd $TRAVIS_BUILD_DIR/certbot
  - ./build.sh

  - cd $TRAVIS_BUILD_DIR/proxy
  - npm run testca
  - node scripts/create-local-config.js > target/koski-luovutuspalvelu-proxy-config-ci.json
  - docker run --name koski-luovutuspalvelu-proxy -p 7022:443 -v `pwd`/target/koski-luovutuspalvelu-proxy-config-ci.json:/etc/nginx/koski-luovutuspalvelu-proxy-config.json:ro -d -m 256m koski-luovutuspalvelu-proxy:latest
  - sleep 5
  - npm run test

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker-cache && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker-cache/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker-cache/$1.tar.gz'

after_script:
  - docker logs koski-luovutuspalvelu-proxy
  - docker stop -t 5 koski-luovutuspalvelu-proxy

deploy:
  provider: script
  script: $TRAVIS_BUILD_DIR/proxy/scripts/upload-image.sh
